import { jsPDF } from 'jspdf';
// eslint-disable-next-line no-unused-vars
import autoTable from 'jspdf-autotable';

// eslint-disable-next-line no-unused-vars
import { Pdftemplet } from './pdf.class.js';

/**
 *
 * @param {Pdftemplet} pdfTemplet
 * @returns {ArrayBuffer}
 */
const createPdf = (pdfTemplet) => {

    /**
     * pdf report contains data defined in the pdf class 
     * 
     */
    let theaders=null;
    //checking whether the table headers are set
    if (pdfTemplet.headers != null) {
        //set theaders to passed header
        theaders = [pdfTemplet.headers];
    }

    const doc = new jsPDF();
    
    // Add title
    let yPos = 20;
    doc.setFontSize(20);
    doc.setFont('helvetica', 'bold');
    doc.text(pdfTemplet.title, doc.internal.pageSize.width / 2, yPos, {
        align: 'center',
    });

    // Add subtitle
    yPos += 10;
    doc.setFontSize(16);
    doc.text(pdfTemplet.subTitle, doc.internal.pageSize.width / 2, yPos, {
        align: 'center',
    });

    // Add report id and date and owner
    yPos += 20;
    doc.setFontSize(10);
    doc.setFont('helvetica', 'normal');
    doc.text(`Report ID: ${pdfTemplet.reportId}`, 20, yPos);
    doc.text(`Date: ${new Date().toLocaleDateString()}`, 20, yPos + 6);
    doc.text(
        `Generated By: ${pdfTemplet.generatedBy}`,
        doc.internal.pageSize.width - 20,
        yPos + 6,
        { align: 'right' }
    );

    // Add table
    yPos += 20;
    doc.autoTable({
        startY: yPos,
        head: theaders,
        body: pdfTemplet.body,
        theme: 'grid',
        headStyles: {
            fillColor: [82, 86, 89],
            textColor: 255,
            fontStyle: 'bold',
        },
        footStyles: {
            fillColor: [240, 240, 240],
            textColor: 0,
            fontStyle: 'bold',
        },
        styles: {
            fontSize: 10,
            cellPadding: 3,
            halign: 'center',
        },
    });

    // Add system generated line at the bottom
    const pageHeight = doc.internal.pageSize.height;
    doc.setFontSize(12);
    doc.setFont('helvetica', 'italic');
    const generatedText = `This is a system generated report. Generated on ${new Date().toLocaleString()}`;
    doc.text(generatedText, doc.internal.pageSize.width / 2, pageHeight - 20, {
        align: 'center',
    });
    return doc.output('arraybuffer');
};

export default createPdf;
